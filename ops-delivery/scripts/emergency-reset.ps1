#!/usr/bin/env pwsh
# Emergency Reset - USB Video Vault

param(
    [string]$CorrectDateTime = "",
    [switch]$Force,
    [switch]$SkipNTP
)

Write-Host @"
üö® RESET D'URGENCE - USB Video Vault
====================================
ATTENTION: Cette proc√©dure va r√©initialiser l'√©tat de licence
et potentiellement modifier l'horloge syst√®me.
"@ -ForegroundColor Red

if (-not $Force) {
    Write-Host "`nConfirmez-vous cette action ? (tapez 'RESET' pour confirmer):" -ForegroundColor Yellow
    $confirm = Read-Host
    if ($confirm -ne "RESET") { 
        Write-Host "Op√©ration annul√©e" -ForegroundColor Yellow
        exit 0 
    }
}

Write-Host "`n1. ARRET APPLICATION..." -ForegroundColor Cyan

# Arr√™ter application si en cours
$processes = Get-Process "USB Video Vault" -ErrorAction SilentlyContinue
if ($processes) {
    $processes | Stop-Process -Force
    Write-Host "Application arr√™t√©e" -ForegroundColor Green
    Start-Sleep 2
} else {
    Write-Host "Application non en cours d'ex√©cution" -ForegroundColor Gray
}

Write-Host "`n2. CORRECTION HORLOGE..." -ForegroundColor Cyan

if ($CorrectDateTime) {
    try {
        Set-Date $CorrectDateTime
        Write-Host "Horloge corrig√©e: $CorrectDateTime" -ForegroundColor Green
    } catch {
        Write-Host "ERREUR correction horloge: $_" -ForegroundColor Red
    }
} else {
    Write-Host "Aucune correction horloge demand√©e" -ForegroundColor Gray
}

# Sync NTP si pas skip
if (-not $SkipNTP) {
    try {
        Write-Host "Tentative synchronisation NTP..." -ForegroundColor Yellow
        w32tm /resync /force 2>$null
        if ($LASTEXITCODE -eq 0) {
            Write-Host "Synchronisation NTP r√©ussie" -ForegroundColor Green
        } else {
            Write-Host "Synchronisation NTP √©chou√©e (normal si pas d'internet)" -ForegroundColor Yellow
        }
    } catch {
        Write-Host "Synchronisation NTP non disponible" -ForegroundColor Yellow
    }
}

Write-Host "`n3. RESET STATE LICENSE..." -ForegroundColor Cyan

# Reset state license
$statePath = "$env:APPDATA\USB Video Vault\.license_state.json"
if (Test-Path $statePath) {
    try {
        # Backup avant suppression
        $backupPath = "$statePath.backup-$(Get-Date -Format 'yyyyMMdd-HHmmss')"
        Copy-Item $statePath $backupPath
        Remove-Item $statePath -Force
        Write-Host "License state r√©initialis√© (backup: $backupPath)" -ForegroundColor Green
    } catch {
        Write-Host "ERREUR reset state: $_" -ForegroundColor Red
    }
} else {
    Write-Host "Aucun state license √† r√©initialiser" -ForegroundColor Gray
}

Write-Host "`n4. GENERATION RAPPORT..." -ForegroundColor Cyan

# G√©n√©rer rapport incident
$reportPath = "incident-report-$(Get-Date -Format 'yyyyMMdd-HHmmss').txt"
$bindingInfo = try { & node scripts/print-bindings.mjs 2>$null } catch { "ERREUR: Impossible de r√©cup√©rer l'empreinte" }

$report = @"
RAPPORT INCIDENT - RESET D'URGENCE
==================================
Date/Heure: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')
Machine: $env:COMPUTERNAME
Utilisateur: $env:USERNAME
Domaine: $env:USERDOMAIN

ACTIONS EFFECTUEES:
- Application arr√™t√©e: $(if($processes) { "Oui" } else { "Non n√©cessaire" })
- Correction horloge: $(if($CorrectDateTime) { $CorrectDateTime } else { "Non demand√©e" })
- Sync NTP: $(if(-not $SkipNTP) { "Tent√©e" } else { "Ignor√©e" })
- State license reset: $(if(Test-Path $statePath) { "Erreur" } else { "R√©ussi" })

NOUVELLE EMPREINTE MACHINE:
$bindingInfo

ETAT SYSTEME POST-RESET:
- Heure syst√®me: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')
- Fuseau horaire: $(Get-TimeZone | Select-Object -ExpandProperty Id)

ACTIONS REQUISES:
1. Red√©marrer l'application USB Video Vault
2. Si erreur "licence invalide", reg√©n√©rer licence avec nouvelle empreinte
3. V√©rifier fonctionnement normal
4. Transmettre ce rapport √† l'administrateur si probl√®me persiste

CONTACTS URGENCE:
- Support IT: [CONTACT_IT]
- Administrateur Licence: [CONTACT_ADMIN]
"@

$report | Out-File $reportPath -Encoding UTF8

Write-Host "`n‚úÖ RESET D'URGENCE TERMINE" -ForegroundColor Green
Write-Host "=========================" -ForegroundColor Green
Write-Host "Rapport g√©n√©r√©: $reportPath" -ForegroundColor White

Write-Host "`nETAPES SUIVANTES:" -ForegroundColor Cyan
Write-Host "1. Red√©marrer l'application USB Video Vault" -ForegroundColor White
Write-Host "2. Tester acc√®s aux m√©dias" -ForegroundColor White
Write-Host "3. Si erreur licence, envoyer rapport √† l'administrateur" -ForegroundColor White
Write-Host "4. Surveiller logs pour anomalies" -ForegroundColor White

# Proposer ouverture du rapport
$openReport = Read-Host "`nOuvrir le rapport maintenant? (O/N)"
if ($openReport -eq "O") {
    try {
        Start-Process notepad $reportPath
    } catch {
        Write-Host "Impossible d'ouvrir le rapport - localisation: $reportPath" -ForegroundColor Yellow
    }
}

Write-Host "`nReset d'urgence termin√© avec succ√®s" -ForegroundColor Green